<?xml version="1.0" encoding="latin1" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<erlref>
  <header>
    <copyright>
      <year>2003</year><year>2009</year>
      <holder>Ericsson AB. All Rights Reserved.</holder>
    </copyright>
    <legalnotice>
      The contents of this file are subject to the Erlang Public License,
      Version 1.1, (the "License"); you may not use this file except in
      compliance with the License. You should have received a copy of the
      Erlang Public License along with this software. If not, it can be
      retrieved online at http://www.erlang.org/.
    
      Software distributed under the License is distributed on an "AS IS"
      basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
      the License for the specific language governing rights and limitations
      under the License.
    
    </legalnotice>

    <title>ssl_pkix</title>
    <prepared>Peter H&ouml;gfeldt</prepared>
    <responsible></responsible>
    <docno>1</docno>
    <approved></approved>
    <checked></checked>
    <date>2003-03-25</date>
    <rev>D</rev>
    <file>ssl_pkix.sgml</file>
  </header>
  <module>ssl_pkix</module>
  <modulesummary>Decoding of PKIX certificates with representation in  Erlang.</modulesummary>
  <description>
    <p>This module provides decoding of PKIX certificates either
      provided as files or as binaries. </p>
  </description>
  <funcs>
    <func>
      <name>decode_cert(Bin) -> {ok, Cert} | {error, Reason}</name>
      <name>decode_cert(Bin, Opts) -> {ok, Cert} | {error, Reason}</name>
      <fsummary>Decode a PKIX certificate.</fsummary>
      <type>
        <v>Bin = binary()</v>
        <v>Opts = [pkix | ssl | subject]</v>
        <v>Cert = term()</v>
      </type>
      <desc>
        <p><c>decode_cert(Bin)</c> is equivalent to
          <c>decode_cert(Bin, [])</c>.</p>
        <p></p>
        <p>The form of the returned certificate depends on the
          options.
          </p>
        <p>If the options list is empty the certificate is returned as
          a DER encoded binary, i.e. <c>{ok, Bin}</c> is returned,
          where <c>Bin></c> is the provided input.
          </p>
        <p>The options <c>pkix</c> and <c>ssl</c> imply that the
          certificate is returned as a parsed ASN.1 structure in the
          form of an Erlang term.
          </p>
        <p>The <c>ssl</c> option gives a more elaborate return
          structure, with more explicit information. In particular
          object identifiers are replaced by atoms.
          </p>
        <p>The options <c>pkix</c>, and <c>ssl</c> are mutually
          exclusive.
          </p>
        <p>The option <c>subject</c> implies that only the subject's
          distinguished name part of the certificate is returned.  It
          can only be used together with the option <c>pkix</c> or the
          option <c>ssl</c>.</p>
      </desc>
    </func>
    <func>
      <name>decode_cert_file(File) -> {ok, Cert} | {error, Reason}</name>
      <name>decode_cert_file(File, Opts) -> {ok, Cert} | {error, Reason}</name>
      <fsummary>Decode a PKIX certificate file.</fsummary>
      <type>
        <v>File = path()</v>
        <v>Opts = [pem | pkix | ssl | subject]</v>
        <v>Cert = term()</v>
      </type>
      <desc>
        <p><c>decode_cert_file(File)</c> is equivalent to
          <c>decode_cert_file(File, [])</c>.</p>
        <p></p>
        <p>The form of the returned certificate depends on the
          options.
          </p>
        <p>If the options list is empty the certificate is returned as
          a DER encoded binary, i.e. the contents of the input
          <c>File</c> is returned as a binary.
          </p>
        <p>The options <c>pkix</c> and <c>ssl</c> implies that the
          certificate is returned as a parsed ASN.1 structure in the
          form of an Erlang term.
          </p>
        <p>The <c>ssl</c> option gives a more elaborate return
          structure, with more explicit information. In particular
          object identifiers are replaced by atoms.
          </p>
        <p>The options <c>pkix</c>, and <c>ssl</c> are mutually
          exclusive.
          </p>
        <p>The option <c>subject</c> implies that only the subject's
          distinguished name part of the peer certificate is returned.
          It can only be used together with the option <c>pkix</c> or
          the option <c>ssl</c>.</p>
      </desc>
    </func>
  </funcs>
  
</erlref>


